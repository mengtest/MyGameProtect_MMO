// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ice_cProtol.proto

#ifndef PROTOBUF_ice_5fcProtol_2eproto__INCLUDED
#define PROTOBUF_ice_5fcProtol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ice_cProtol {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ice_5fcProtol_2eproto();
void protobuf_AssignDesc_ice_5fcProtol_2eproto();
void protobuf_ShutdownFile_ice_5fcProtol_2eproto();

class MSG_C2L_LOGINSERVER;
class MSG_L2C_LOGINSERVER;
class MSG_C2S_PUB_BEAT;
class MSG_S2C_PUB_BEAT;

// ===================================================================

class MSG_C2L_LOGINSERVER : public ::google::protobuf::Message {
 public:
  MSG_C2L_LOGINSERVER();
  virtual ~MSG_C2L_LOGINSERVER();

  MSG_C2L_LOGINSERVER(const MSG_C2L_LOGINSERVER& from);

  inline MSG_C2L_LOGINSERVER& operator=(const MSG_C2L_LOGINSERVER& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_C2L_LOGINSERVER& default_instance();

  void Swap(MSG_C2L_LOGINSERVER* other);

  // implements Message ----------------------------------------------

  MSG_C2L_LOGINSERVER* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_C2L_LOGINSERVER& from);
  void MergeFrom(const MSG_C2L_LOGINSERVER& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string account = 1;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 1;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // required string password = 2;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 2;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  inline void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:ice_cProtol.MSG_C2L_LOGINSERVER)
 private:
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_password();
  inline void clear_has_password();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* account_;
  ::std::string* password_;
  friend void  protobuf_AddDesc_ice_5fcProtol_2eproto();
  friend void protobuf_AssignDesc_ice_5fcProtol_2eproto();
  friend void protobuf_ShutdownFile_ice_5fcProtol_2eproto();

  void InitAsDefaultInstance();
  static MSG_C2L_LOGINSERVER* default_instance_;
};
// -------------------------------------------------------------------

class MSG_L2C_LOGINSERVER : public ::google::protobuf::Message {
 public:
  MSG_L2C_LOGINSERVER();
  virtual ~MSG_L2C_LOGINSERVER();

  MSG_L2C_LOGINSERVER(const MSG_L2C_LOGINSERVER& from);

  inline MSG_L2C_LOGINSERVER& operator=(const MSG_L2C_LOGINSERVER& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_L2C_LOGINSERVER& default_instance();

  void Swap(MSG_L2C_LOGINSERVER* other);

  // implements Message ----------------------------------------------

  MSG_L2C_LOGINSERVER* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_L2C_LOGINSERVER& from);
  void MergeFrom(const MSG_L2C_LOGINSERVER& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ice_cProtol.MSG_L2C_LOGINSERVER)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 ret_;
  friend void  protobuf_AddDesc_ice_5fcProtol_2eproto();
  friend void protobuf_AssignDesc_ice_5fcProtol_2eproto();
  friend void protobuf_ShutdownFile_ice_5fcProtol_2eproto();

  void InitAsDefaultInstance();
  static MSG_L2C_LOGINSERVER* default_instance_;
};
// -------------------------------------------------------------------

class MSG_C2S_PUB_BEAT : public ::google::protobuf::Message {
 public:
  MSG_C2S_PUB_BEAT();
  virtual ~MSG_C2S_PUB_BEAT();

  MSG_C2S_PUB_BEAT(const MSG_C2S_PUB_BEAT& from);

  inline MSG_C2S_PUB_BEAT& operator=(const MSG_C2S_PUB_BEAT& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_C2S_PUB_BEAT& default_instance();

  void Swap(MSG_C2S_PUB_BEAT* other);

  // implements Message ----------------------------------------------

  MSG_C2S_PUB_BEAT* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_C2S_PUB_BEAT& from);
  void MergeFrom(const MSG_C2S_PUB_BEAT& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ice_cProtol.MSG_C2S_PUB_BEAT)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ice_5fcProtol_2eproto();
  friend void protobuf_AssignDesc_ice_5fcProtol_2eproto();
  friend void protobuf_ShutdownFile_ice_5fcProtol_2eproto();

  void InitAsDefaultInstance();
  static MSG_C2S_PUB_BEAT* default_instance_;
};
// -------------------------------------------------------------------

class MSG_S2C_PUB_BEAT : public ::google::protobuf::Message {
 public:
  MSG_S2C_PUB_BEAT();
  virtual ~MSG_S2C_PUB_BEAT();

  MSG_S2C_PUB_BEAT(const MSG_S2C_PUB_BEAT& from);

  inline MSG_S2C_PUB_BEAT& operator=(const MSG_S2C_PUB_BEAT& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MSG_S2C_PUB_BEAT& default_instance();

  void Swap(MSG_S2C_PUB_BEAT* other);

  // implements Message ----------------------------------------------

  MSG_S2C_PUB_BEAT* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MSG_S2C_PUB_BEAT& from);
  void MergeFrom(const MSG_S2C_PUB_BEAT& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ice_cProtol.MSG_S2C_PUB_BEAT)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ice_5fcProtol_2eproto();
  friend void protobuf_AssignDesc_ice_5fcProtol_2eproto();
  friend void protobuf_ShutdownFile_ice_5fcProtol_2eproto();

  void InitAsDefaultInstance();
  static MSG_S2C_PUB_BEAT* default_instance_;
};
// ===================================================================


// ===================================================================

// MSG_C2L_LOGINSERVER

// required string account = 1;
inline bool MSG_C2L_LOGINSERVER::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_C2L_LOGINSERVER::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_C2L_LOGINSERVER::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_C2L_LOGINSERVER::clear_account() {
  if (account_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& MSG_C2L_LOGINSERVER::account() const {
  // @@protoc_insertion_point(field_get:ice_cProtol.MSG_C2L_LOGINSERVER.account)
  return *account_;
}
inline void MSG_C2L_LOGINSERVER::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  account_->assign(value);
  // @@protoc_insertion_point(field_set:ice_cProtol.MSG_C2L_LOGINSERVER.account)
}
inline void MSG_C2L_LOGINSERVER::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  account_->assign(value);
  // @@protoc_insertion_point(field_set_char:ice_cProtol.MSG_C2L_LOGINSERVER.account)
}
inline void MSG_C2L_LOGINSERVER::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ice_cProtol.MSG_C2L_LOGINSERVER.account)
}
inline ::std::string* MSG_C2L_LOGINSERVER::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ice_cProtol.MSG_C2L_LOGINSERVER.account)
  return account_;
}
inline ::std::string* MSG_C2L_LOGINSERVER::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MSG_C2L_LOGINSERVER::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ice_cProtol.MSG_C2L_LOGINSERVER.account)
}

// required string password = 2;
inline bool MSG_C2L_LOGINSERVER::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MSG_C2L_LOGINSERVER::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MSG_C2L_LOGINSERVER::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MSG_C2L_LOGINSERVER::clear_password() {
  if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_->clear();
  }
  clear_has_password();
}
inline const ::std::string& MSG_C2L_LOGINSERVER::password() const {
  // @@protoc_insertion_point(field_get:ice_cProtol.MSG_C2L_LOGINSERVER.password)
  return *password_;
}
inline void MSG_C2L_LOGINSERVER::set_password(const ::std::string& value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(value);
  // @@protoc_insertion_point(field_set:ice_cProtol.MSG_C2L_LOGINSERVER.password)
}
inline void MSG_C2L_LOGINSERVER::set_password(const char* value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(value);
  // @@protoc_insertion_point(field_set_char:ice_cProtol.MSG_C2L_LOGINSERVER.password)
}
inline void MSG_C2L_LOGINSERVER::set_password(const char* value, size_t size) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ice_cProtol.MSG_C2L_LOGINSERVER.password)
}
inline ::std::string* MSG_C2L_LOGINSERVER::mutable_password() {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ice_cProtol.MSG_C2L_LOGINSERVER.password)
  return password_;
}
inline ::std::string* MSG_C2L_LOGINSERVER::release_password() {
  clear_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = password_;
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MSG_C2L_LOGINSERVER::set_allocated_password(::std::string* password) {
  if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete password_;
  }
  if (password) {
    set_has_password();
    password_ = password;
  } else {
    clear_has_password();
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ice_cProtol.MSG_C2L_LOGINSERVER.password)
}

// -------------------------------------------------------------------

// MSG_L2C_LOGINSERVER

// required int32 ret = 1;
inline bool MSG_L2C_LOGINSERVER::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MSG_L2C_LOGINSERVER::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MSG_L2C_LOGINSERVER::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MSG_L2C_LOGINSERVER::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 MSG_L2C_LOGINSERVER::ret() const {
  // @@protoc_insertion_point(field_get:ice_cProtol.MSG_L2C_LOGINSERVER.ret)
  return ret_;
}
inline void MSG_L2C_LOGINSERVER::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:ice_cProtol.MSG_L2C_LOGINSERVER.ret)
}

// -------------------------------------------------------------------

// MSG_C2S_PUB_BEAT

// -------------------------------------------------------------------

// MSG_S2C_PUB_BEAT


// @@protoc_insertion_point(namespace_scope)

}  // namespace ice_cProtol

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ice_5fcProtol_2eproto__INCLUDED
